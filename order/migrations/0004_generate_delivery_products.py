# Generated by Django 4.1.5 on 2023-03-03 08:16

from random import uniform
from typing import List, Tuple

from django.db import migrations

from django_countries import countries

from checkout.models import Currency
from order.misc import generate_sku
from order.models import ProductType
from recipesnstuff import CHECKOUT_APP_NAME
from recipesnstuff.settings import PRICING_FACTOR, DEFAULT_CURRENCY
from utils.database import table_exists


def delivery_options() -> List[Tuple]:
    del_opts = []
    for opt in ProductType.delivery_options():
        del_opts.extend([
            # (opt, sku, country, desc, pmin, pmax)
            (opt, generate_sku(opt, country=country), country.code,
             f'{opt.value.name} ({country.name})',
             1.0 if opt == ProductType.STANDARD_DELIVERY else
             2.0 if opt == ProductType.PREMIUM_DELIVERY else 0,
             1.99 if opt == ProductType.STANDARD_DELIVERY else
             2.99 if opt == ProductType.PREMIUM_DELIVERY else 0
             )
            for country in list(countries)
        ])
    return del_opts


class Migration(migrations.Migration):

    dependencies = [
        ('order', '0003_add_orderproduct_country_and_more'),
    ]

    todo_operations = []

    if table_exists(f'{CHECKOUT_APP_NAME}_{Currency.model_name()}'):
        # check currency table exists (it won't in a migration on a
        # pristine database), before generating delivery skus
        todo_operations.extend([
            migrations.RunSQL(
                sql=[
                    ("INSERT INTO order_orderproduct "
                     "(type, sku, country, description, unit_price, "
                     "base_currency) VALUES (%s, %s, %s, %s, %s, %s);", [
                         opt.choice, sku, country, desc,
                         round(uniform(pmin, pmax), PRICING_FACTOR)
                         if pmin > 0 else 0,
                         DEFAULT_CURRENCY.upper()
                     ])
                ],
                reverse_sql=[
                    ("DELETE FROM order_orderproduct WHERE sku=%s;", [sku])
                ]
            ) for opt, sku, country, desc, pmin, pmax in delivery_options()
        ])

    operations = todo_operations
