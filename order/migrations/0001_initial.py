# Generated by Django 4.1.5 on 2023-02-02 12:15

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models, connection
import django.db.models.deletion
import utils.models
from order.misc import generate_sku
from order.models import ProductType
from recipesnstuff import SUBSCRIPTION_APP_NAME
from subscription.models import Subscription


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('subscription', '0004_remove_usersubscription_is_active_and_more'),
        ('recipes', '0011_alter_instruction_options_instruction_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    todo_operations = [
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True,
                                     serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[
                    ('m', 'Miscellaneous'), ('s', 'Subscription'),
                    ('ib', 'Ingredient box'), ('cc', 'Cooking class')
                ], default='m', max_length=2, verbose_name='type')),
                ('sku', models.CharField(max_length=40, unique=True,
                                         verbose_name='order number')),
                ('subscription',
                 models.ForeignKey(
                     blank=True, null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='subscription.subscription')),
                ('recipe', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    to='recipes.recipe')),
                ('base_currency', models.CharField(
                    default='EUR', max_length=3,
                    verbose_name='base currency')),
                ('unit_price', models.DecimalField(
                    decimal_places=2, default=Decimal('0'), max_digits=19,
                    verbose_name='unit price')),
                ('description', models.CharField(default='', max_length=150,
                                                 verbose_name='description')),
            ],
            options={
                'ordering': ['type'],
            },
            bases=(utils.models.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id',
                 models.BigAutoField(auto_created=True, primary_key=True,
                                     serialize=False, verbose_name='ID')),
                ('created',
                 models.DateTimeField(auto_now_add=True,
                                      verbose_name='created')),
                ('updated',
                 models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('status', models.CharField(choices=[
                    ('ip', 'In progress'), ('pp', 'Pending payment'),
                    ('p', 'Paid'), ('pr', 'Preparing'),
                    ('ps', 'Pending shipping'), ('it', 'In transit'),
                    ('d', 'Delivered'), ('cd', 'Completed'),
                    ('rr', 'Return requested'),
                    ('ra', 'Return approved'), ('rd', 'Return denied'),
                    ('rt', 'Return in transit'), ('rn', 'Returned'),
                    ('v', 'Void'), ('c', 'Cancelled')], default='v',
                    max_length=2, verbose_name='status')),
                ('amount',
                 models.DecimalField(decimal_places=2, default=Decimal('0'),
                                     max_digits=19, verbose_name='amount')),
                ('base_currency',
                 models.CharField(default='EUR', max_length=3,
                                  verbose_name='base currency')),
                ('order_num',
                 models.CharField(
                     max_length=40, verbose_name='order number')),
                ('items', models.ManyToManyField(to='order.orderproduct')),
                ('user',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
            },
            bases=(utils.models.ModelMixin, models.Model),
        ),
    ]

    all_tables = connection.introspection.table_names()
    if f'{SUBSCRIPTION_APP_NAME}_{Subscription.model_name()}'.lower() \
            in all_tables:
        # check subscription table exists (it won't in a migration on a
        # pristine database), before generating subscription skus
        todo_operations.extend([
            migrations.RunSQL(
                sql=[
                    ("INSERT INTO order_orderproduct "
                     "(type, sku, subscription_id, description, unit_price, "
                     "base_currency) VALUES (%s, %s, %s, %s, %s, %s);", [
                        ProductType.SUBSCRIPTION.choice, sku, sub_id, desc,
                        price, ccy
                     ])
                ],
                reverse_sql=[
                    ("DELETE FROM order_orderproduct WHERE "
                     "subscription_id=%s;", [sub_id])
                ]
            ) for sku, sub_id, desc, price, ccy in [
                (generate_sku(ProductType.SUBSCRIPTION, subscription=sub),
                 sub.id, f"'{sub.name}' subscription", sub.amount,
                 sub.base_currency
                 ) for sub in list(Subscription.objects.all())
            ]
        ])

    operations = todo_operations
