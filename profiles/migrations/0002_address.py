# Generated by Django 4.1.5 on 2023-01-06 07:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import utils.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('profiles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id',
                 models.BigAutoField(
                     auto_created=True, primary_key=True, serialize=False,
                     verbose_name='ID')),
                ('country',
                 django_countries.fields.CountryField(max_length=2)),
                ('street',
                 models.CharField(
                     max_length=150, verbose_name='street address')),
                ('street2',
                 models.CharField(
                     blank=True, max_length=150,
                     verbose_name='street address line 2')),
                ('city',
                 models.CharField(
                     blank=True, max_length=50, verbose_name='city')),
                ('state',
                 models.CharField(
                     blank=True, max_length=50, verbose_name='state')),
                ('postcode',
                 models.CharField(
                     blank=True, max_length=50, verbose_name='postcode')),
                ('is_default',
                 models.BooleanField(
                     default=False,
                     help_text="Designates that this record represents the "
                               "user's default address.",
                     verbose_name='default')),
                ('user',
                 models.ForeignKey(
                     on_delete=django.db.models.deletion.CASCADE,
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_default'],
            },
            bases=(utils.models.ModelMixin, models.Model),
        ),
    ]
