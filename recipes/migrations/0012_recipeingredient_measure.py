# Generated by Django 4.1.5 on 2023-02-24 13:44

from django.db import migrations, models
import django.db.models.deletion

from recipes.constants import THIS_APP
from recipes.models import Measure, RecipeIngredient, Ingredient
from utils.database import table_exists


def set_recipe_ingredient_measures(apps, schema_editor):
    """
    Migrate Ingredient measure field to RecipeIngredient measure field
    :param apps: apps registry
    :param schema_editor:
        editor generating statements to change database schema
    """
    # https://docs.djangoproject.com/en/4.1/topics/migrations/#data-migrations
    for recipe_ingredient in RecipeIngredient.objects.all():
        ingredient = Ingredient.objects.get(**{
            f'{Ingredient.id_field()}': recipe_ingredient.ingredient.id
        })
        recipe_ingredient.measure = ingredient.measure
        recipe_ingredient.save()


def reverse_recipe_ingredient_measures(apps, schema_editor):
    """
    Migrate Ingredient measure field to RecipeIngredient measure field
    :param apps: apps registry
    :param schema_editor:
        editor generating statements to change database schema
    """
    # nothing to do


class Migration(migrations.Migration):
    dependencies = [
        ('recipes', '0011_alter_instruction_options_instruction_index'),
    ]

    field_info = {
        'help_text': 'Designates the measure for the ingredient.',
        'on_delete': django.db.models.deletion.CASCADE,
        'to':'recipes.measure'
    }
    if table_exists(f'{THIS_APP}_{Measure.model_name()}'):
        field_info['default'] = Measure.get_default_unit().id

    operations = [
        migrations.AddField(
            model_name='recipeingredient',
            name='measure',
            field=models.ForeignKey(**field_info),
            preserve_default=False,
        ),
        migrations.RunPython(set_recipe_ingredient_measures,
                             reverse_code=reverse_recipe_ingredient_measures),
    ]
